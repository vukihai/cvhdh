/*
 * @bot-written
 *
 * WARNING AND NOTICE
 * Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
 * Full Software Licence as accepted by you before being granted access to this source code and other materials,
 * the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
 * commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
 * licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
 * including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
 * access, download, storage, and/or use of this source code.
 *
 * BOT WARNING
 * This file is bot-written.
 * Any changes out side of "protected regions" will be lost next time the bot makes any changes.
 */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

// % protected region % [Add any further imports here] off begin
// % protected region % [Add any further imports here] end

/**
 * The name of the slide. This should be displayed in the title of the slide.
 */
export type Name = string;
/**
 * The id of the question. This will be used as the key in the submission if the property is not set.
 */
export type Id = string;
/**
 * The type of the question.
 */
export type QuestionType = 'text'
| 'number'
| 'checkbox'
| 'statement'
| 'date'
| 'datetime'
| 'list'
| 'radiobutton'
| 'formSection'
// % protected region % [Add extra question types here] off begin
// % protected region % [Add extra question types here] end
;
/**
 * The label that is displayed with the question.
 */
export type Title = string;
/**
 * If the field matches to a field in the submission entity then this field will be the attribute name in camel case.
 */
export type Property = string;
/**
 * The key of the condition to apply logic against.
 */
export type Path = string;
/**
 * The comparison to apply for the condition.
 */
export type Comparison = 'equal'
| 'notEqual'
| 'greaterThan'
| 'lessThan'
| 'greaterThanOrEqual'
| 'lessThanOrEqual'
| 'contains'
// % protected region % [Add extra comparisons here] off begin
// % protected region % [Add extra comparisons here] end
;
/**
 * The value to use for the condition.
 */
export type Value = string;
/**
 * A list of conditions that must be met for this question to be displayed. These conditions are joined with a logical AND.
 */
export type ShowConditions = Condition[];
/**
 * The questions that are displayed in the slide.
 */
export type Contents = Question[];
/**
 * Root element for a form object.
 */
export type Form = Slide[];

/**
 * A slide in the form. This is a section of a form to divide the questions into groups.
 */
export interface Slide {
	name: Name;
	contents: Contents;
	[k: string];
}
/**
 * A question is an atomic element of a form to retrieve data from a user.
 */
export interface Question {
	id: Id;
	questionType: QuestionType;
	title: Title;
	options?: { [key: string]};
	property?: Property;
	showConditions?: ShowConditions;
	content?: string;
	className?: string;
	validators?: Validators;
	toolTip?: string;
	[k: string];
}
/**
 * A condition is an operation on a submission to make a choice.
 */
export interface Condition {
	path: Path;
	condition: Comparison;
	value: Value;
	[k: string];
}

export interface Validator {
	path: Path;
	validator: ValidatorType;
	additionalData: string;
	[k: string];
}

export type Validators = Validator[];

export type ValidatorType = 'required'
| 'email'
| 'phone'
| 'past'
| 'future'
| 'after'
| 'before'
| 'custom'
| 'length'
| 'equalNumber'
| 'notEqualNumber'
| 'greaterThan'
| 'greaterThanOrEqual'
| 'lessThan'
| 'lessThanOrEqual'
// % protected region % [Add extra validators here] off begin
// % protected region % [Add extra validators here] end
;

// % protected region % [Add any extra interfaces here] off begin
// % protected region % [Add any extra interfaces here] end
